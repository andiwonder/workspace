import java.util.*;

public class VControl {
	public static void main(String []args){
		String[] l = {"1.1.2", "1.1.43", "1.1.4", "3.1.0", "2.3.3", "5.0.12", "4.0.2","1.0", "1.0.2", "1.0.12", "1.1.2", "1.3.3"};
		Arrays.sort(l, new Comparator<String>() {
		    @Override 
		    public int compareTo(Version that) {
		        if(that == null)
		            return 1;
		        String[] thisParts = this.get().split("\\.");
		        String[] thatParts = that.get().split("\\.");
		        int length = Math.max(thisParts.length, thatParts.length);
		        for(int i = 0; i < length; i++) {
		            int thisPart = i < thisParts.length ?
		                Integer.parseInt(thisParts[i]) : 0;
		            int thatPart = i < thatParts.length ?
		                Integer.parseInt(thatParts[i]) : 0;
		            if(thisPart < thatPart)
		                return -1;
		            if(thisPart > thatPart)
		                return 1;
		        }
		        return 0;
		    }
		});
		
		
		
		
		
		
		
		
		
		
		
		System.out.println(Arrays.toString(l));
		HashMap<String, ArrayList<String>> hMap = new HashMap<String, ArrayList<String>>();
		String firstMajor = l[0].split("\\.")[0];
		ArrayList<String> firstTemp = new ArrayList<String>();
		firstTemp.add(l[0]);
		hMap.put(firstMajor,firstTemp); 
		for (int i=1; i < l.length; i++){
			int counter = Integer.parseInt(firstMajor);
			int num1 = Integer.parseInt(l[i].split("\\.")[0]);
	    	int num2 = Integer.parseInt(l[i-1].split("\\.")[0]);
			if (num1 != num2){
				ArrayList<String> newtemp = new ArrayList<String>();
				newtemp.add(l[i]);
				hMap.put(l[i].split("\\.")[0],newtemp);
				counter ++;
			} else {
				ArrayList<String> temp = hMap.get(Integer.toString(counter));
				temp.add(l[i]);
				hMap.put(Integer.toString(counter),temp);
			}
		}
		for (Map.Entry<String, ArrayList<String>> entry : hMap.entrySet()) {
		    System.out.println(entry.getKey()+" : "+entry.getValue());
		}
		
	}
}
