import java.util.*;

public class Lucky2 {

	public static void main(String [] args){
		int [] l = {2,3,4,5,6,8,21,48};
		Arrays.sort(l);
		List<Integer> originalList = new ArrayList<Integer>();
		for (int index = 0; index < l.length; index++) {
		    originalList.add(l[index]);
		}
		HashMap<Integer, List<Integer>> map = new HashMap<Integer, List<Integer>>();
		for (int i = 0; i < l.length; i++) {
		    int currentDividor = l[i];
//		    System.out.println("first loop l i is " + currentDividor);
//		    System.out.println(currentDividor);
		    for (int j = i+1; j < l.length; j++){
//		    	System.out.print(l[j] + " ");
		    	if (l[j] % currentDividor == 0 && currentDividor != l[j]){
		    		if ( map.get(currentDividor) == null){
		    			List<Integer> multiples = new ArrayList<Integer>();
		    			multiples.add(l[j]);
		    			map.put(currentDividor, multiples);
		    		} else {
		    			map.get(currentDividor).add(l[j]);
		    		}
		    	}
		    }
//		    System.out.println(" ");
//		    System.out.println("outerloop started again");
		}
		int total = 0;
		for (Integer name: map.keySet()){
			System.out.println(name);
			System.out.println("----------------");
//            System.out.println(map.get(name).size());
            for (int i=0; i < map.get(name).size(); i++){
            	System.out.print(map.get(name).get(i) + " ");
            	int otherval = map.get(name).get(i);
            	if (map.get(otherval) != null){
//            		System.out.println("the otherval is " + otherval );
            		total = map.get(otherval).size() + total;
            	}
            }
            System.out.println(Arrays.toString(map.get(name).toArray()));
//            System.out.println("----------------");
        }
		System.out.println("total is " + total);
	}
	
	public static void findTriple(){
//		List<Integer> triple = new ArrayList<Integer>();
//		for (int i=0; i < l.length; i ++){
//			System.out.println("l i is " + l[i]);
//			int triplefinder = 0;
//			System.out.println("------");
//			for (int j = i+1; i < l.length; i++){
//				System.out.println("l j is " + l[j]);
//				if (l[i] == l[j]){
//					triplefinder++;
//				}
//				if (triplefinder == 2){
//					triple.add(l[i]);
//					triplefinder = 0;
//				}
//			}
//		}
//		// add elements to al, including duplicates
//		Set<Integer> hs = new HashSet<>();
////		System.out.println(Arrays.toString(triple.toArray()));
//		hs.addAll(triple);
//		triple.clear();
//		triple.addAll(hs);
////		System.out.println(Arrays.toString(triple.toArray()));
//		total = total + triple.size();
	}
}
