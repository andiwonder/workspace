import java.util.*;
public class Level2 {

	public static void main(String[] args) {
		String n = "210022112";
		int len = n.length();
		List<Long> digits = digitToArray(n, len, 3);
		System.out.println(Arrays.toString(digits.toArray()));
		Collections.sort(digits, Collections.reverseOrder());
		System.out.println(Arrays.toString(digits.toArray()));
	}
	
	public static List<Long> digitToArray(String n, int len, int base) {
		long start = Long.parseLong(n);
		String basenum = Long.toString(start,base);
		long id = Long.parseLong(basenum);
		List<Long> digits = new LinkedList<Long>(); 
		while (id > 0) {
		    digits.add(0,id%10);
		    id = id/10;
		}
		if (digits.size() < len){
			for (int i= digits.size(); i <= len -1; i++){
				digits.add(i,(long) 0);
			}
		}
		return digits;
	}

	
	public static void Rem(List<Long> digits , int len) {
		
		Collections.sort(digits, Collections.reverseOrder());
		long xval = 0;
		long yval = 0;
		for (int i = 0;i < 5; i++) {
			xval = xval + (digits.get(i) * (int) Math.pow(10,i));
			yval = yval + (digits.get(5 - i - 1) * (int) Math.pow(10,i));
		}
		long newval = yval - xval;
		System.out.println("yval is " + yval + " xval is " + xval);
		System.out.println("newval is " + newval);
	}
	
}
