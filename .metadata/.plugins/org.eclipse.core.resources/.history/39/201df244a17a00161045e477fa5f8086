package fib_huge;
import java.util.*;

public class FibonacciHuge {
    
    private static long getFibonacciHugeNaive(long n, long m) {
        if (n <= 1)
            return n % m;

        long previous = 0;
        long current  = 1;
        long periodLen = 0;
        long prevMod;
        long thisMod;
        long [] mods = new long [5000];
        boolean found = false;

        while(found == false)
          for (int i = 2; i < n - 1; ++i) {
            long tmp_previous = previous;
            previous = current;
            current = tmp_previous + current;
            prevMod = tmp_previous % m;
            thisMod = current % m;
            System.out.print(thisMod + " ");
            mods[i-2] = thisMod;
            
            if (i > 2 && thisMod == 1 && prevMod == 0) {
//            System.out.println("this Mod is " + thisMod + "found it at position " + (i-2));
//            System.out.println(Arrays.toString(mods));
              found = true;
              periodLen = i -2;
            }
          }

        return mods[n % periodLen];
    };
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        System.out.println(getFibonacciHugeNaive(n, m));
    }
}

