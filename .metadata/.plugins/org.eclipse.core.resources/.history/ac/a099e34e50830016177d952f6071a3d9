import java.util.*;
public class Level2 {

	public static void main(String[] args) {
		// String n, int b
		int start = 1211;
		int len = 4;
		List<Integer> values = new LinkedList<Integer>();
//		boolean repeat = false;
		int counter = 0;
		while (counter < 15) {
			if (counter == 0){
				values.add(counter, start);
				counter++;
			} else {
				values.add(counter, Rem(values.get(counter-1),len));
				if (values.get(counter) == values.get(counter-1)){
					System.out.println("look here");
				}
				counter++;
			}
		}
		System.out.println(Arrays.toString(values.toArray()));
	}
	
	public static int Rem(int id, int len){
		List<Integer> digits = new LinkedList<Integer>();
		while (id > 0) {
		    digits.add(0, id%10);
		    id = id/10;
		}
		if (digits.size() < len){
			for (int i= digits.size(); i <= len -1; i++){
				digits.add(i, 0);
			}
		}
//		System.out.println(Arrays.toString(digits.toArray()));
		int length = digits.size();
		List<Integer> xArr = digits;
	    Comparator<Integer> comparator = new Comparator<Integer>() {
	        @Override
	        public int compare(Integer o1, Integer o2) {
	            return o2.compareTo(o1);
	        }
	    };
	    Collections.sort(digits);
		Collections.sort(xArr, comparator);
		int xval = 0;
		int yval = 0;
		for (int i = 0;i < length; i++) {
			xval = xval + (digits.get(i) * (int) Math.pow(10,i));
			yval = yval + (xArr.get(length - i - 1) * (int) Math.pow(10,i));
		}
		System.out.println("X val is " + xval);
		System.out.println("Y val is " + yval);
		int newval = yval - xval;
		return newval;
	}
	
}
